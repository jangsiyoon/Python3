## 딕셔너리란?

'''
    대응 관계를 나타낼 수 있는 자료형을 가지고 있다. 
    ex) Key와 Value를 한 쌍으로 갖는 자료형.
    딕셔너리는 리스트나 튜플처럼 순차적으로 해당 요솟값을 구하지 않고 key를 통해서 value를 얻는다.
'''


## 딕셔너리 생성

dic = {'name' : 'pey', 'phone' : '01044847600', 'birth' : '1006'}

''' dic의 구조
    (key)   (value)
    name    pey
    phone   01044847600
    birth   1006
'''

## 딕셔너리 쌍 추가, 삭제하기

# 1. 딕셔너리 쌍 추가 하기.

a = {1 : 'a'}
a[2] = 'b'
print(a)

a['people'] = 'person'

print(a)

# 2. 딕셔너리 요소 삭제하기 

del a['people'] # del 함수를 사용해서 del 처럼 입력하면 지정한 key에 해당하는 쌍이 삭제된다.
print(a)

''' 딕셔너리 사용하는 이유 주의사항
    1. 리스트와 문자열로는 표현하기 상당히 까다로운 존재들을 딕셔너리 형식으로 표현해서 사용하면 편리하다.
    2. key는 항상 고유한 값이므로 중복되는 key값을 설정하면 나머지 것들이 모두 무시된다.
    3. key에는 리스트를 사용할 수 없다.
'''

## 딕셔너리 관련 함수

# 1. key 리스트 만들기(keys)

for k in dic.keys(): # keys 사용 하는 경우
    print(k)
    
'''
    keys 나 valus 함수의 경우 객체를 반환하기 때문에 리스트로 변환하려면
    list(a.keys)
    list(a.values)
'''



    


